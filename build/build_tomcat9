#!/bin/bash
set -o pipefail
set -xe

# Set java network TTL and random entropy device
sed -e '/^securerandom.source=/s/\/dev\/random/\/dev\/.\/urandom/' \
    -e 's/^#networkaddress.cache.ttl=.*/networkaddress.cache.ttl=120/' \
    -i- /usr/lib/jvm/jre/lib/security/java.security

# Set up tomcat group and user
groupadd -g 92 webgroup
useradd -u 91 -g webgroup -c Tomcat -s /sbin/nologin tomcat
cd /root/build
tarf=apache-tomcat-${TOMCAT_VERS}.tar.gz
tinif=tini_${TINI_VERS}-amd64.rpm
wget --no-verbose https://dlcdn.apache.org/tomcat/tomcat-8/v${TOMCAT_VERS}/bin/$tarf
wget --no-verbose https://github.com/krallin/tini/releases/download/v${TINI_VERS}/$tinif
echo "${TOMCAT_SHA5}  ${tarf}" | sha512sum -c -
echo "${TINI_SHA5}  ${tinif}" | sha512sum -c -
yum -y localinstall ${tinif}
gzip -dc ${tarf} | tar -C $CATALINA_HOME --strip-components=1 -xvf -
/bin/rm -r ${tarf}
yum -y clean all
rm -rf /var/cache/yum

# Copy over settings and dependencies to enable Tomcat logging through Log4j 2.x
(cd /root/build && tar cf - bin lib log4j2) | (cd $CATALINA_HOME && tar xvf -)

# Download and install required log4j2 components
pushd /root/build/log4j2
echo "LOG4J2 importing GPG KEYS ..."
gpg --import KEYS
echo "LOG4J2 downloading $LOG4J2_VERS gpg *.asc signature ..."
curl -fsSL -o log4j-bin.tar.gz.asc \
  https://downloads.apache.org/logging/log4j/$LOG4J2_VERS/apache-log4j-$LOG4J2_VERS-bin.tar.gz.asc
echo "LOG4J2 downloading $LOG4J2_VERS tarball ..."
curl -fsSL -o log4j-bin.tar.gz \
  https://dlcdn.apache.org/logging/log4j/$LOG4J2_VERS/apache-log4j-$LOG4J2_VERS-bin.tar.gz
echo "LOG4J2 verifying $LOG4J2_VERS tarball with gpg *.asc signature ..."
gpg --verify log4j-bin.tar.gz.asc
echo "LOG4J2 verified OK"

echo "LOG4J2 extracting to $CATALINA_HOME/log4j2 ..."
tar -zxvf log4j-bin.tar.gz -C $CATALINA_HOME/log4j2 --strip-components=1 \
  "*/log4j-api-$LOG4J2_VERS.jar" \
  "*/log4j-core-$LOG4J2_VERS.jar" \
  "*/log4j-jul-$LOG4J2_VERS.jar" \
  "*/log4j-appserver-$LOG4J2_VERS.jar"
echo "LOG4J2 extracting to $CATALINA_HOME/lib ..."
tar -zxvf log4j-bin.tar.gz -C $CATALINA_HOME/lib --strip-components=1 \
  "*/log4j-1.2-api-$LOG4J2_VERS.jar" \
  "*/log4j-jcl-$LOG4J2_VERS.jar" \
  "*/log4j-slf4j-impl-$LOG4J2_VERS.jar"
/bin/rm -f log4j-bin.tar.gz log4j-bin.tar.gz.asc
echo "LOG4J2 extracted OK"
popd

# Remove logging.properties to enable Log4j 2.x LoggingManager
/bin/rm -f $CATALINA_HOME/conf/logging.properties

cd $CATALINA_HOME
mkdir -p conf/Catalina/localhost
chown -R root:webgroup .
chmod -R o-rwx conf
chmod -R g+rX conf
chmod 754 bin/*.sh
sed -e '/<Listener.*AprLifecycle/s/\/>/\/-->/' \
    -e '/<Listener.*AprLifecycle/s/<L/<!--L/' \
    -i- conf/server.xml
/bin/rm -rf bin/*.bat bin/*.tar.gz webapps/doc* webapps/exampl* webapps/*manager
chown -R tomcat:webgroup webapps work temp logs conf/Catalina/localhost
find webapps work temp logs conf/Catalina/localhost -type d | xargs chmod g+s
